<div class="col-6 border bg-light" @onclick="(args)=>LastSelectedProduct(args,Product.Name)">
    <h3>Product - @Product.Id</h3>
    <input type="checkbox" @onchange="FavoriteUpdated" /> Add to Favorite <br/> <br/>
    Name - @Product.Name <br />
    RF from Parent - <span>@FirstFragment</span> <span>@SecondFragment</span> <br/>
    Show Properties: <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive?"checked":null)" /> <br />
    @if (@Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
    <_EditDeleteButton IsActive="@Product.IsActive">
    </_EditDeleteButton>
</div>

@code {
    [Parameter]
    public Demo_Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated { get; set; }

    private async Task FavoriteUpdated(ChangeEventArgs e)
    {
        await OnFavoriteUpdated.InvokeAsync((bool)e.Value);
    }

    [Parameter]
    public EventCallback<string> OnLastSelectedProductChange { get; set; }

    private async Task LastSelectedProduct(MouseEventArgs e, string name)
    {
        await OnLastSelectedProductChange.InvokeAsync(name);
    }

    [Parameter]
    public RenderFragment FirstFragment { get; set; }

    [Parameter]
    public RenderFragment SecondFragment { get; set; }

}
